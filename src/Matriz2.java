
import java.io.BufferedReader; //libreria para leer texto
import java.io.FileReader; //libreria para obtener archivos
import java.io.IOException; //libreria para excepciones
import javax.swing.JOptionPane; //libreria para mensajes

//MATRICES PARA SIMBOLOS ESPECIALES Y PALABRAS RESERVADAS

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ezequiel
 */
public class Matriz2 extends javax.swing.JFrame {

    /**
     * Creates new form Matriz2
     */
    public Matriz2() {
        initComponents();
    }

    public Matriz2(String tipoToken) { //constructor para que se ejecute apenas abra
        initComponents();
        //este es el mismo codigo usado en AnalizadorLexico para obtener las palabras reservadas
        String[] pReservadas = new String[15]; 
        try {
            FileReader f = new FileReader("testlectura.txt");
            BufferedReader archivo = new BufferedReader(f);
            for (int i = 0; i < 15; i++) {
                pReservadas[i] = archivo.readLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "El archivo 'testlectura.txt' no fue encontrado... guárdelo en la carpeta src");
        }

           //este es el mismo codigo usado en AnalizadorLexico para obtener los simbolos especiales
        String separadores = "";
        try {
            FileReader f = new FileReader("separador.txt");
            BufferedReader archivo = new BufferedReader(f);
            separadores = archivo.readLine();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "El archivo 'separador.txt' no fue encontrado... guárdelo en la carpeta src");
        }

        areaTexto.setEditable(false); //para que el usuario no edite la tabla
        if (tipoToken.equals("Reservado:")) {//tabla para pReservada
            areaTexto.setText(String.join("\n", pReservadas)); //imprimir palabras
            titulo.setText("PALABRAS RESERVADAS");//titulo del form
        } else if (tipoToken.equals("Simbolo:")) {//tabla para simbolo
            areaTexto.setText(separadores);//titulo del form
            titulo.setText("SÍMBOLOS ESPECIALES");//imprimir simbolos
        } else if (tipoToken.equals("Operador:")) {//tabla para operadr
            areaTexto.setText(separadores);//imprimir simbolos
            titulo.setText("SÍMBOLOS ESPECIALES");//titulo del form
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        titulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        areaTexto.setText(" ");
        jScrollPane2.setViewportView(areaTexto);

        titulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titulo.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(titulo)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matriz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matriz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matriz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matriz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Matriz2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
